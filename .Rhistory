expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Homicidio)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Homicidio)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()+
theme(legend.title = element_text(size = 20), legend.text = element_text(size = 0))
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Homicidio)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()+
theme(legend.title = element_text(size = 25), legend.text = element_text(size = 0))
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Roubo)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()+
theme(legend.title = element_text(size = 25), legend.text = element_text(size = 0))
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Homicidio)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()+
theme(legend.title = element_text(size = 25), legend.text = element_text(size = 0))
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Trafico)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()+
theme(legend.title = element_text(size = 25), legend.text = element_text(size = 0))
ggplot(merge(medias, centroides)) +
geom_map(map = shape.f, aes(map_id = Regiao, fill = Tx.Posse)) +
geom_text(aes(x, y, label = Regiao), color = 'white') +
expand_limits(x = shape.f$long, y = shape.f$lat) +
coord_map() +
theme_void()+
theme(legend.title = element_text(size = 25), legend.text = element_text(size = 0))
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
summary(bd)
bd %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf)
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf, bd2)
summary(lm_homicidio)
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
corrplot(correlation, type = "lower", method = "number")
write_excel_csv(as.data.frame(correlation), file = "correlacao.csv")
View(correlation)
correlation[1]
write_excel_csv(as.data.frame(correlation), file = "correlacao.csv")
correlation[2]
correlation<-as.data.frame(correlation)
View(correlation)
correlation[,1:5]<-NULL
correlation[,1:11]<-NULL
correlation[,2:4]<-NULL
kable(correlation)
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22, order(descreasing = true))
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22, order(descreasing = TRUE))
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes",
"car","ggplot2","udunits2","units","geobr","sf","ggplot2","cowplot",
"RColorBrewer","dplyr","rnaturalearth", "psych", "rgdal","RColorBrewer","rgeos","plyr")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
arrange(correlation, desc(taxa_homicidio))
correlation<-arrange(correlation, desc(taxa_homicidio))
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation<-as.data.frame(correlation)
View(correlation)
correlation[,1:16]<-NULL
correlation[,2:4]<-NULL
correlation$taxa_homicidio<-arrange(correlation, desc(taxa_homicidio))
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation<-as.data.frame(correlation)
correlation[,1:16]<-NULL
correlation[,2:4]<-NULL
correlation[oreder(correlation$taxa_homicidio,decreasing = c(TRUE))]
correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE))]
correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE))]
correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
row_names <- row.names(correlation)
correlation$row_names <-row.names(correlation)
correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
correlation <-correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
correlation$row_names <-NULL
row.names(correlation)<-c(1:20)
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation<-as.data.frame(correlation)
correlation[,1:16]<-NULL
correlation[,2:4]<-NULL
correlation <-correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation<-as.data.frame(correlation)
correlation[,1:16]<-NULL
correlation[,2:4]<-NULL
correlation <-correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation<-as.data.frame(correlation)
correlation[,1:16]<-NULL
correlation[,2:4]<-NULL
correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
row_names <- row.names(correlation)
correlation$row_names <-row.names(correlation)
correlation <-correlation[order(correlation$taxa_homicidio,decreasing = c(TRUE)),]
row.names(correlation)<-c("Tx_Homicidio",
"Vuln_pobreza_pcent",
"Pobres_pcent",
"Atkinson",
"Extrm_pobres_pcent",
"Renda_extrm_pobres",
"Gini",
"Theil",
"Prop_renda_10_por_40",
"Prop_renda_20_por_40",
"Renda_pobres",
"Area",
"Dens_demo",
"Pop",
"Renda_quinto_rico",
"Renda_vuln_pobreza",
"Idhm_edc",
"Idhm_renda",
"Idhm",
"Renda_quinto_pobre")
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
correlation$row_names<_NULL
correlation$row_names<NULL
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
correlation$row_names<NULL
correlation$row_names<-NULL
colnames(correlation)<-c("Tx_Homicidio")
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
correlation <- cor(select(bd2,-cod, -ano, -uf), use = "na.or.complete")
correlation<-as.data.frame(correlation)
correlation[,1:16]<-NULL
correlation[,2:4]<-NULL
correlation$row_names <-row.names(correlation)
correlation <-correlation[order(correlation$taxa_homicidio,increasing = c(TRUE)),]
correlation <-correlation[order(correlation$taxa_homicidio,decreasing = c(FALSE)),]
row.names(correlation)<-c("Renda_quinto_pobre",
"Idhm",
"Idhm_renda",
"Idhm_edc",
"Renda_vuln_pobreza",
"Renda_quinto_rico",
"Pop",
"Dens_demo",
"Area",
"Renda_pobres",
"Prop_renda_20_por_40",
"Prop_renda_10_por_40",
"Theil",
"Gini",
"Renda_extrm_pobres",
"Extrm_pobres_pcent",
"Atkinson",
"Pobres_pcent",
"Vuln_pobreza_pcent",
"Tx_Homicidio")
correlation$row_names<-NULL
colnames(correlation)<-c("Tx_Homicidio")
kable(correlation)%>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf, bd2)
summary(lm_homicidio)
summ(lm_homicidio, confint = T, digits = 4, ci.width = .95)
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf -ano, bd2)
summary(lm_homicidio)
summ(lm_homicidio, confint = T, digits = 4, ci.width = .95)
export_summs(lm_homicidio, scale = F, digits = 4)
summ(lm_homicidio, confint = T, digits = 4, ci.width = .95)
summ(lm_homicidio, confint = T, digits = 4, ci.width = .95)
summary(lm_homicidio)
summary(lm_homicidio)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod -ano -uf -quantidade_estupro -quantidade_roubo_furto_veiculos -quantidade_roubos -tx_posse_entorpecente -tx_trafico_entorpecente -tx_roubo_furto_veiculos -tx_roubos -tx_estupro , bd)
summary(modelo_lm)
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf -ano, bd2)
summary(lm_homicidio)
View(bd2)
View(bd2)
View(bd)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
bd[,20:25]<-NULL
bd[,21:22]<-NULL
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf -ano, bd)
summary(lm_homicidio)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod -ano -uf -quantidade_estupro -quantidade_roubo_furto_veiculos -quantidade_roubos -tx_posse_entorpecente -tx_trafico_entorpecente -tx_roubo_furto_veiculos -tx_roubos -tx_estupro , bd)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod -ano -uf , bd)
summary(modelo_lm)
step_lm_homicidio <- step(lm_homicidio)
summary(step_lm_homicidio)
summary(step_lm_homicidio)
bd$yhat_step_lm_homicidio <- step_lm_homicidio$fitted.values
ggplotly(
ggplot(bd, aes(x = yhat_step_lm_homicidio, y = taxa_homicidio )) +
geom_point()
)
ggplotly(
ggplot(bd, aes(x = yhat_step_lm_homicidio, y = taxa_homicidio )) +
geom_point() +
theme_void()
)
ggplotly(
ggplot(bd, aes(x = yhat_step_lm_homicidio, y = taxa_homicidio )) +
geom_point()
)
ggplot(bd, aes(x = yhat_step_lm_homicidio, y = taxa_homicidio )) +
geom_point()
step_lm_homicidio <- step(lm_homicidio, k = 3.841459)
summary(step_lm_homicidio)
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
#Plotando os resíduos do modelo step_lm_homicidio
bd %>%
mutate(residuos = step_lm_homicidio$residuals) %>%
ggplot(aes(x = residuos)) +
geom_histogram(color = "white",
fill = "#440154FF",
bins = 30,
alpha = 0.6) +
labs(x = "Resíduos",
y = "Frequência") +
theme_bw()
#Acrescentando uma curva normal teórica para comparação entre as distribuições
bd %>%
mutate(residuos = step_lm_homicidio$residuals) %>%
ggplot(aes(x = residuos)) +
geom_histogram(aes(y = ..density..),
color = "white",
fill = "#440154FF",
bins = 30,
alpha = 0.6) +
stat_function(fun = dnorm,
args = list(mean = mean(step_lm_homicidio$residuals),
sd = sd(step_lm_homicidio$residuals)),
size = 2, color = "grey30") +
scale_color_manual(values = "grey50") +
labs(x = "Resíduos",
y = "Frequência") +
theme_bw()
#Shapiro-Francia: n > 30
sf.test(step_lm_homicidio$residuals) #função 'sf.test' do pacote 'nortest'
View(bd)
View(bd)
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
bd$bc_taxa_homicidio <- (((bd$taxa_homicidio ^ lambda_BC$lambda) - 1) /
lambda_BC$lambda)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-yhat_step_lm_homicidio -taxa_homicidio -cod -ano -uf, bd)
summary(modelo_lm_bc)
step_lm_bc <- step(modelo_lm_bc, k = 3.841459)
summary(step_lm_bc)
lambda_BC
summary(step_lm_bc)
sf.test(step_lm_bc$residuals)
data.frame(OLS = logLik(lm_homicidio),
OLS_STEP = logLik(step_lm_homicidio),
BC = logLik(modelo_lm_bc),
BC_STEP = logLik(step_lm_bc)) %>%
rename(`OLS` = 1,
`OLS Step` = 2,
`BC` = 3,
`BC Step` = 4) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do Ganho de LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","coral4","coral")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
data.frame(OLS = logLik(lm_homicidio),
OLS_STEP = logLik(step_lm_homicidio),
BC = logLik(modelo_lm_bc),
) %>%
rename(`OLS` = 1,
`OLS Step` = 2,
`BC` = 3,
) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do Ganho de LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","coral4")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
data.frame(OLS = logLik(lm_homicidio),
OLS_STEP = logLik(step_lm_homicidio),
BC = logLik(modelo_lm_bc)
) %>%
rename(`OLS` = 1,
`OLS Step` = 2,
`BC` = 3
) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do Ganho de LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","coral4")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
data.frame(OLS = logLik(lm_homicidio),
OLS_STEP = logLik(step_lm_homicidio),
BC = logLik(modelo_lm_bc),
BC_STEP = logLik(step_lm_bc)) %>%
rename(.,`OLS` = 1,
`OLS Step` = 2,
`BC` = 3,
`BC Step` = 4) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do Ganho de LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","coral4","coral")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
data.frame(OLS = logLik(lm_homicidio),
OLS_STEP = logLik(step_lm_homicidio),
BC = logLik(modelo_lm_bc),
BC_STEP = logLik(step_lm_bc)) %>%
rename(`OLS1` = 1,
`OLS Step` = 2,
`BC1` = 3,
`BC Step` = 4) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do Ganho de LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","coral4","coral")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
data.frame(OLS = logLik(lm_homicidio),
OLS_STEP = logLik(step_lm_homicidio),
BC = logLik(modelo_lm_bc),
BC_STEP = logLik(step_lm_bc)) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do Ganho de LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","coral4","coral")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
lrtest(step_lm_homicidio, step_lm_bc)
lrtest(lm_homicidio, step_lm_homicidio)
lrtest(step_lm_homicidio, step_lm_bc)
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
bd$yhat_step_lm__bc_homicidio <- (((step_lm_bc$fitted.values*(lambda_BC$lambda))+
1))^(1/(lambda_BC$lambda))
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm_homicidio, x = taxa_homicidio )) +
geom_point()
ggplot(bd, aes(y = yhat_step_lm__bc_homicidio, x = taxa_homicidio )) +
geom_point()
View(bd2)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
bd[,20:25]<-NULL
bd[,21:22]<-NULL
View(bd)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
bd[,20:25]<-NULL
bd[,21:22]<-NULL
lm_homicidio <- lm(taxa_homicidio ~ . -cod -uf -ano, bd)
summary(lm_homicidio)
summ(lm_homicidio, confint = T, digits = 4, ci.width = .95)
export_summs(lm_homicidio, scale = F, digits = 4)
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes",
"car","ggplot2","udunits2","units","geobr","sf","ggplot2","cowplot",
"RColorBrewer","dplyr","rnaturalearth", "psych", "rgdal","RColorBrewer","rgeos","plyr")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
View(step_lm_homicidio)
summary(lm_homicidio)
summ(lm_homicidio, confint = T, digits = 4, ci.width = .95)
export_summs(lm_homicidio, scale = F, digits = 4)
step_lm_homicidio <- step(lm_homicidio, k = 3.841459)
summary(step_lm_homicidio)
