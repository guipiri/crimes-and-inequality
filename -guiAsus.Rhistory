install.packages("ggplot2")
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","reshape2","PerformanceAnalytics","correlation","see",
"ggraph","psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"equatiomatic")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio))+geom_point(color = "#39568CFF", size = 2.5))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio))+geom_point(aes(colours = factor(uf))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio))) + geom_point(aes(colour = factor(uf)))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio))) + geom_point(aes(colour = factor(uf)))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio))) + geom_point(aes(colour = factor(uf)))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)) + geom_point(aes(colour = factor(uf))))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)) + geom_point(aes(colour = factor(ano))))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)) + geom_point(aes(colour = factor(uf))))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)) + geom_point(aes(colour = factor(uf, ano))))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)) + geom_point(aes(colour = factor(uf))))
ggplotly(ggplot(bd, aes(x = gini, y = taxa_homicidio)) + geom_point(aes(colour = factor(ano))))
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"equatiomatic","corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade2.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
View(bd)
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ tkinson,
random = ~ atkinson | ano,
data = bd,
method = "REML")
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ atkinson,
random = ~ atkinson | ano,
data = bd,
method = "REML")
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ atkinson,
random = ~ 1 | ano,
data = bd,
method = "REML")
View(modelo_intercept_inclin_hlm2)
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ atkinson,
random = ~ atkinson | ano,
data = bd,
method = "REML")
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ atkinson,
random = ~ atkinson | uf,
data = bd,
method = "REML")
summary(modelo_intercept_inclin_hlm2)
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ atkinson,
random = ~ atkinson | ano,
data = bd,
method = "REML")
modelo_intercept_inclin_hlm2 <- lme(fixed = taxa_homicidio ~ atkinson,
random = ~ 1 | uf,
data = bd,
method = "REML")
summary(modelo_intercept_inclin_hlm2)
View(bd)
correlation <- cor(select(bd,-cod, -ano, -uf), use = "na.or.complete")
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"equatiomatic","corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"equatiomatic","corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade2.csv")
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
summary(bd)
correlation <- cor(select(bd,-cod, -ano, -uf), use = "na.or.complete")
View(correlation)
View(bd)
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
lambda_BC <- powerTransform(bd$taxa_homicidio)
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"equatiomatic","corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes","car")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
sf.test(modelo_lm$residuals)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd <- remove_missing(bd)
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
correlation <- cor(select(bd,-cod, -ano, -uf), use = "na.or.complete")
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod-ano-uf , bd)
summary(modelo_lm)
loglik_modelo_lm <- logLik(modelo_lm)
sf.test(modelo_lm$residuals)
lambda_BC
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
lambda_BC
bd$bc_taxa_homicidio <- (((bd$taxa_homicidio ^ lambda_BC$lambda) - 1) /
lambda_BC$lambda)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-cod-ano-uf , bd)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-cod-ano-uf , bd)
summary(modelo_lm_bc)
loglik_modelo_lm_bc <- logLik(modelo_lm_bc)
step_modelo_lm_bc <- step(modelo_lm_bc, k = 3.841459)
loglik_step_modelo_lm_bc <-logLik(step_modelo_lm_bc)
summary(step_modelo_lm_bc)
bd$yhat <- step_modelo_lm_bc$fitted.values
bd$yhat_modelo_bc <- (((step_modelo_lm_bc$fitted.value*(lambda_BC$lambda))+
1))^(1/(lambda_BC$lambda))
ggplotly(
ggplot(bd, aes(x = yhat_modelo_bc, y = bd$taxa_homicidio )) +
geom_point()
)
ggplotly(
ggplot(bd, aes(x = yhat_modelo_bc, y = taxa_homicidio )) +
geom_point()
)
sf.test(step_modelo_lm_bc$residuals)
bd$residuals <- bd$yhat_modelo_bc - bd$taxa_homicidio
sf.test(bd$residuals)
summary(step_modelo_lm_bc)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-taxa_homicidio-cod-ano-uf , bd)
summary(modelo_lm_bc)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-taxa_homicidio-cod-ano-uf , bd)
summary(modelo_lm_bc)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd <- remove_missing(bd)
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod-ano-uf , bd)
loglik_modelo_lm <- logLik(modelo_lm)
sf.test(modelo_lm$residuals) #Como p-value é menor que 0.05 rejeitamos H0 e portanto os resíduos não seguem uma distribuição normal. Sendo assim, vamos aplicar a transformação de Box-cox.
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
bd$bc_taxa_homicidio <- (((bd$taxa_homicidio ^ lambda_BC$lambda) - 1) /
lambda_BC$lambda)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-taxa_homicidio-cod-ano-uf , bd)
summary(modelo_lm_bc)
loglik_modelo_lm_bc <- logLik(modelo_lm_bc)
step_modelo_lm_bc <- step(modelo_lm_bc, k = 3.841459)
summary(step_modelo_lm_bc)
loglik_step_modelo_lm_bc <-logLik(step_modelo_lm_bc)
sf.test(step_modelo_lm_bc$residuals)
bd$yhat_modelo_bc <- (((step_modelo_lm_bc$fitted.value*(lambda_BC$lambda))+
1))^(1/(lambda_BC$lambda))
ggplotly(
ggplot(bd, aes(x = yhat_modelo_bc, y = taxa_homicidio )) +
geom_point()
)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd <- remove_missing(bd)
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod-ano-uf-bd$quantidade_estupro-bd$quantidade_roubo_furto_veiculos-bd$quantidade_roubos-bd$tx_posse_entorpecente-bd$tx_trafico_entorpecente-bd$tx_roubo_furto_veiculos-bd$tx_roubos-bd$tx_estupro , bd)
summary(modelo_lm)
loglik_modelo_lm <- logLik(modelo_lm)
sf.test(modelo_lm$residuals) #Como p-value é menor que 0.05 rejeitamos H0 e portanto os resíduos não seguem uma distribuição normal. Sendo assim, vamos aplicar a transformação de Box-cox.
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
bd$bc_taxa_homicidio <- (((bd$taxa_homicidio ^ lambda_BC$lambda) - 1) /
lambda_BC$lambda)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-taxa_homicidio-cod-ano-uf-bd$quantidade_estupro-bd$quantidade_roubo_furto_veiculos-bd$quantidade_roubos-bd$tx_posse_entorpecente-bd$tx_trafico_entorpecente-bd$tx_roubo_furto_veiculos-bd$tx_roubos-bd$tx_estupro  , bd)
summary(modelo_lm_bc)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-taxa_homicidio-cod-ano-uf-quantidade_estupro-quantidade_roubo_furto_veiculos-quantidade_roubos-tx_posse_entorpecente-tx_trafico_entorpecente-tx_roubo_furto_veiculos-tx_roubos-bd$tx_estupro, bd)
summary(modelo_lm_bc)
loglik_modelo_lm_bc <- logLik(modelo_lm_bc)
step_modelo_lm_bc <- step(modelo_lm_bc, k = 3.841459)
summary(step_modelo_lm_bc)
summary(step_modelo_lm_bc)
summary(modelo_lm_bc)
summary(step_modelo_lm_bc)
loglik_step_modelo_lm_bc <-logLik(step_modelo_lm_bc)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod -ano -uf -quantidade_estupro -quantidade_roubo_furto_veiculos -quantidade_roubos -tx_posse_entorpecente -tx_trafico_entorpecente -tx_roubo_furto_veiculos -tx_roubos -tx_estupro , bd)
bd <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd <- remove_missing(bd)
bd$ano <- as.factor(bd$ano)
bd$cod <- as.factor(bd$cod)
bd$uf <- as.factor(bd$uf)
modelo_lm <- lm(formula = taxa_homicidio ~ .-cod -ano -uf -quantidade_estupro -quantidade_roubo_furto_veiculos -quantidade_roubos -tx_posse_entorpecente -tx_trafico_entorpecente -tx_roubo_furto_veiculos -tx_roubos -tx_estupro , bd)
summary(modelo_lm)
loglik_modelo_lm <- logLik(modelo_lm)
sf.test(modelo_lm$residuals) #Como p-value é menor que 0.05 rejeitamos H0 e portanto os resíduos não seguem uma distribuição normal. Sendo assim, vamos aplicar a transformação de Box-cox.
lambda_BC <- powerTransform(bd$taxa_homicidio)
lambda_BC
bd$bc_taxa_homicidio <- (((bd$taxa_homicidio ^ lambda_BC$lambda) - 1) /
lambda_BC$lambda)
modelo_lm_bc <- lm(formula = bc_taxa_homicidio ~ .-bd$tx_estupro -taxa_homicidio -cod -ano -uf -quantidade_estupro -quantidade_roubo_furto_veiculos -quantidade_roubos -tx_posse_entorpecente -tx_trafico_entorpecente -tx_roubo_furto_veiculos -tx_roubos -tx_estupro, bd)
summary(modelo_lm_bc)
loglik_modelo_lm_bc <- logLik(modelo_lm_bc)
step_modelo_lm_bc <- step(modelo_lm_bc, k = 3.841459)
summary(step_modelo_lm_bc)
loglik_step_modelo_lm_bc <-logLik(step_modelo_lm_bc)
bd$yhat_modelo_bc <- (((step_modelo_lm_bc$fitted.value*(lambda_BC$lambda))+
1))^(1/(lambda_BC$lambda))
sf.test(step_modelo_lm_bc$residuals)
bd$yhat_modelo_bc <- (((step_modelo_lm_bc$fitted.value*(lambda_BC$lambda))+
1))^(1/(lambda_BC$lambda))
View(bd)
ggplotly(
ggplot(bd, aes(x = yhat_modelo_bc, y = taxa_homicidio )) +
geom_point()
)
bd2 <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd2 <- remove_missing(bd)
bd2$ano <- as.factor(bd$ano)
bd2$cod <- as.factor(bd$cod)
bd2$uf <- as.factor(bd$uf)
bd2$cod <- NULL
bd2$tx_posse_entorpecente <- NULL
bd2$tx_trafico_entorpecente <- NULL
bd2$tx_roubo_furto_veiculos <- NULL
bd2$tx_roubos <- NULL
bd2$tx_estupro <- NULL
bd2$quantidade_roubos <- NULL
bd2$quantidade_estupro <- NULL
bd2$quantidade_roubo_furto_veiculos <- NULL
bd2 <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd2 <- remove_missing(bd)
bd2$ano <- as.factor(bd$ano)
bd2$cod <- as.factor(bd$cod)
bd2$uf <- as.factor(bd$uf)
bd2$tx_posse_entorpecente <- NULL
bd2$tx_trafico_entorpecente <- NULL
bd2$tx_roubo_furto_veiculos <- NULL
bd2$tx_roubos <- NULL
bd2$tx_estupro <- NULL
bd2$quantidade_roubos <- NULL
bd2$quantidade_estupro <- NULL
bd2$quantidade_roubo_furto_veiculos <- NULL
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","PerformanceAnalytics","correlation","see","ggraph",
"psych","nortest","rgl","car","ggside","tidyquant","olsrr",
"jtools","ggstance","magick","cowplot","emojifont","beepr","Rcpp",
"equatiomatic","corrplot","reshape2","nlme","lmtest","fastDummies",
"msm","lmeInfo","jtools","gganimate","ggridges","viridis","hrbrthemes","car","ggplot2")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
bd2 <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd2 <- remove_missing(bd)
bd2$ano <- as.factor(bd$ano)
bd2$cod <- as.factor(bd$cod)
bd2$uf <- as.factor(bd$uf)
bd2$tx_posse_entorpecente <- NULL
bd2$tx_trafico_entorpecente <- NULL
bd2$tx_roubo_furto_veiculos <- NULL
bd2$tx_roubos <- NULL
bd2$tx_estupro <- NULL
bd2$quantidade_roubos <- NULL
bd2$quantidade_estupro <- NULL
bd2$quantidade_roubo_furto_veiculos <- NULL
media_tx<-bd2 %>%
group_by(ano) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
View(media_tx)
media_tx<-bd2 %>%
group_by(uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
View(media_tx)
pacotesMaps <- c("udunits2","units","geobr","sf","ggplot2","cowplot",
"RColorBrewer","dplyr","rnaturalearth")
if(sum(as.numeric(!pacotesMaps %in% installed.packages())) != 0){
instalador <- pacotesMaps[!pacotesMaps %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotesMaps, require, character = T)
} else {
sapply(pacotesMaps, require, character = T)
}
estados <- read_state(code_state="all")
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
View(estados)
View(media_tx)
media_tx <- rename(media_tx,"code_state"="cod")
media_tx$code_state <- as.double(media_tx$code_state)
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx$code_state <- as.double(media_tx$code_state)
View(media_tx)
media_tx <- rename(media_tx,"code_state"="cod")
media_tx$code_state <- as.double(media_tx$code_state)
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"uf"="name_state")
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"uf"="name_state")
media_tx <- rename(media_tx,"name_state"="uf")
media_tx$name_state <- as.character(media_tx$name_state)
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"abrev_state"="uf")
media_tx$abrev_state <- as.character(media_tx$abrev_state)
estados <-inner_join(estados,media_tx,by = "code_state")
estados <-inner_join(estados,media_tx,by = "abrev_state")
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"abbrev_state"="uf")
media_tx$abrev_state <- as.character(media_tx$abrev_state)
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"abbrev_state"="uf")
media_tx$abrev_state <- as.character(media_tx$abrev_state)
media_tx$abrev_state <- as.character(media_tx$abbrev_state)
estados <-inner_join(estados,media_tx,by = "abbrev_state")
estados$avg <- rename(estados, "tx_homicidio"="avg")
View(estados)
estados <- rename(estados, "tx_homicidio"="avg")
estados <- read_state(code_state="all")
pacotesMaps <- c("udunits2","units","geobr","sf","ggplot2","cowplot",
"RColorBrewer","dplyr","rnaturalearth")
if(sum(as.numeric(!pacotesMaps %in% installed.packages())) != 0){
instalador <- pacotesMaps[!pacotesMaps %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotesMaps, require, character = T)
} else {
sapply(pacotesMaps, require, character = T)
}
bd2 <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd2 <- remove_missing(bd)
bd2 <- read.csv("BD_municipios_ano_criminalidade_desigualdade - bd.csv")
bd2 <- remove_missing(bd2)
bd2$ano <- as.factor(bd2$ano)
bd2$cod <- as.factor(bd2$cod)
bd2$tx_posse_entorpecente <- NULL
bd2$tx_trafico_entorpecente <- NULL
bd2$tx_roubo_furto_veiculos <- NULL
bd2$tx_roubos <- NULL
bd2$tx_estupro <- NULL
bd2$quantidade_roubos <- NULL
bd2$quantidade_estupro <- NULL
bd2$quantidade_roubo_furto_veiculos <- NULL
pacotesMaps <- c("udunits2","units","geobr","sf","ggplot2","cowplot",
"RColorBrewer","dplyr","rnaturalearth")
if(sum(as.numeric(!pacotesMaps %in% installed.packages())) != 0){
instalador <- pacotesMaps[!pacotesMaps %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotesMaps, require, character = T)
} else {
sapply(pacotesMaps, require, character = T)
}
estados <- read_state(code_state="all")
media_tx <- bd2 %>%
group_by(cod, uf) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
View(estados)
View(media_tx)
estados$code_state <-as.factor(estados$code_state)
media_tx <- bd2 %>%
group_by(cod) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"code_state"="cod")
estados <-inner_join(estados,media_tx,by = "code_state")
estados <- rename(estados, "tx_homicidio"="avg")
ggplot(estados)+
geom_sf(aes(fill = "tx_homicidio"))
ggplot(estados)+
geom_sf(aes())
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, colors = "red"))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, colours = "red"))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),colors = "red")
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),colors = "red")
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),colours = "red")
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),colors(distinct = true))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),colors(distinct = TRUE))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, colorRamp()))
geom_sf(aes(fill = tx_homicidio, colorRamp(c("red", "green")))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, color(c("red", "green")))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, colors("green"))
ggplot(estados)+
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, colorRamp(c("red", "green"))))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, color="red")))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, color="red")))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, color="red"))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, color="abberv_state"))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, color="abberv_state"))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio, colours="green"))
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio), position = "jitter")
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),position = "jitter" )
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),position = "jitter", na.rm = TRUE)
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),position = "jitter", na.rm = TRUE)
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio),position = "jitter", na.rm = TRUE)
ggplot(estados)+
geom_sf(aes(x=abbrev_state, y = tx_homicidio, fill = tx_homicidio),position = "jitter", na.rm = TRUE)
ggplot(estados)+
geom_sf(aes(x =abbrev_state, y = tx_homicidio, fill = tx_homicidio),position = "jitter", na.rm = TRUE)
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio))
hist(bd$taxa_homicidio) #Imagem 1
hist(bd2$taxa_homicidio) #Imagem 1
media_tx<-bd2 %>%
group_by(ano) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
ggplot(media_tx, aes(x = ano, y= avg, group=1)) + #Imagem 2
geom_line() +
geom_point() +
labs(x = "Ano", title = "Tx. Homicídio Média", y = NULL) +
geom_text(label = scales::comma(media_tx$avg), nudge_x = 0.25)
ggplot(estados)+
geom_sf(aes(fill = tx_homicidio))
View(media_tx)
media_tx <- bd2 %>%
group_by(cod) %>%
summarise(avg = mean(taxa_homicidio, na.rm = TRUE))
media_tx <- rename(media_tx,"code_state"="cod")
View(media_tx)
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, font_size = 22)
